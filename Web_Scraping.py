# importing the modules
from datetime import date, timedelta, datetime
from pymongo import MongoClient
import san
from bson.objectid import ObjectId
client = MongoClient('mongodb://localhost:27017/')
db1 = client.cryptoValues
data = {} 
fromDate = (input("Enter from date in the format yyyy-mm-dd: ")) 
toDate = (input("Enter to date in the format yyyy-mm-dd: ")) 
# convert string to date object
d1 = datetime.strptime(fromDate, "%Y-%m-%d")
d2 = datetime.strptime(toDate, "%Y-%m-%d")
# difference between dates in timedelta
print("d2",d2.date())
print("d1",d1.date())
delta = d2 - d1
print(f'Difference is {delta.days} days')
noOfDays = delta.days  
with open("D:\\Project\\IndexCoins.txt") as openfileobject:
    for line in openfileobject:
          
        # One by one File's cryptocurrency names are read
        id = line.strip() 
        try:
            print(id)        
            
            for idx in range(noOfDays):
                print(date.today())                 
                daystr = str(d2.date() - timedelta(days = idx)) 
                # Coll_santiment_Price collection documents need to be created
                # It will have columns namely "_id", "time", "id",
                # "priceBtc", "priceUsd", "volume", "marketcap"
                data['id'] = id
                data['time'] = daystr                
                # _id column for unique key and can be generated by using ObjectId()
                data['_id'] = ObjectId()                
                # Initially create 3 columns in collection as rest of the
                # columns are updated after running santiment api call                  
                db1.Coll_santiment_Price.insert_one(data)                
            try:
                # Santiment API call to get Cryptocurrency prices
                daa = san.get("prices/santiment",
                              from_date = fromDate ,
                              to_date = toDate,
                              interval = "1d")                 
                 
                print(daa)                  
            except:
                print("URL error")
                continue;              
            
            for idx in range(noOfDays):                  
                daystr = str(d2.date() - timedelta(days=idx))                 
                # API call output for the above chosen date
                row = daa.loc[daystr]                  
                # priceBtc, priceUsd, volume and marketcap are
                # collected and stored in seperate variables
                priceBtc = row['priceBtc']
                priceUsd = row['priceUsd']
                volume = row['volume']
                marketcap = row['marketcap']
                print(id, daystr, priceBtc, priceUsd, volume, marketcap)
                try:
                    # Update the collection with above details against
                    # cryptocurrency id and time  i.e. bitcoin and 2020-08-27
                    db1.Coll_santiment_Price.update_one(
                        {'time': daystr, 'id': id},
                        {"$set": {"priceBtc": priceBtc,
                                  "priceUsd": priceUsd,
                                  "volume": volume,
                                  "marketcap": marketcap,
                                  }
                         },
                        upsert = True
                        )
                except Exception as e:
                    print("inner exception",e)
        except Exception as e:
            print("Error",e)
